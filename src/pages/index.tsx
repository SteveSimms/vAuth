import type { NextPage } from "next"
import Head from "next/head"

import Link from "next/link"
import {getSession, signIn, signOut, useSession} from "next-auth/react"
import {useState} from "react";
const log = console.log

const Home: NextPage = () => {

const { data: session } = useSession()
    

console.log(session)

    const getSession = async (e: any) => {
    e.preventDefault()
       await  fetch('api/posts', {method: 'POST'})
    }
    


   
    
  return (
    <>
      <Head>
        <title>VinylArcheaology</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/Vinyl%20(1).png" />
      </Head>

      <h2>
        Hello
      </h2>


        <div >
            <p
            
            >
                {!session && (
                    <>
              <span >
                You are not signed in
              </span>
                        <button
                            href={`/api/auth/signin`}
                            className=" btn btn-primary"
                            onClick={(e) => {
                                e.preventDefault()
                                signIn()
                            }}
                        >
                            Sign in
                        </button>
                    </>
                )}
                {session?.user && (
                    <>
                        {session.user.image && (
                            <span
                                style={{ backgroundImage: `url('${session.user.image}')` }}
                            
                            />
                        )}
                        <span >
                <small>Signed in as</small>
                <br />
                <strong>{ session.user.name}</strong>
              </span>


                        <button
                            href={`/api/auth/signout`}
                            className=" btn btn-primary"
                            onClick={(e) => {
                                e.preventDefault()
                                signOut()
                            }}
                        >
                            Sign out
                        </button>
                    <button onClick={getSession}>GetSession</button>

                    </>
                )}
            </p>
            {/*<button onClick={testPost}>Get session</button>*/}
        </div>
        <PostForm session={session}/>

  
    </>
  );
};


export const PostForm = ({session: any}) => {
    // const [title, setTitle] = useState('')
    // const [content, setContent] = useState('')
    const [formData, setFormData] = useState({
        title: '',
        content: '',
        
    })

    const onFormFieldChange = (event: any) => {
        event.preventDefault()
        log("onChange", {syntheticEvent: event});

        //capture info you need from event here as the event object will fall out of scope quickly

        //the event.target will represent the input
        const target = event.target;

        //this is the value of the input, the value in the text box the user types into
        const formDataValue = target.value;

        //this is the name (so be sure to give your form fields a name attribute)
        const nameOfField = target.name;
        log({nameOfField, formDataValue})
        //if there isnt data coming from the router listen to the create action on the form

        //set the new state using the old property name / object key and using the new value for formData
        setFormData((prevState) => {
            log("updater onChange", {prevState});

            // copy the personData object from state using the spread operator
            const newFriendObject = {
                ...prevState,
            };

            // change the value of the copied object using the name and using bracket notation
            newFriendObject[nameOfField] = formDataValue;
            log("updatedFormData", {newFriendObject});
            // log('newFriendObject.slug', newFriendObject.slug)
            //in functional components the name of this object/variable does not matter
            return newFriendObject;
        });


    }


    const onSubmit = async (e: any) => {
        e.preventDefault()
        
        const res = await fetch('api/posts', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
        })
        const json = await res.json()
        console.log('json',json)
        console.log('onSubmit formData',formData)
    }
    
    return (
        <form>
            {formData?.title}
            <label>Title</label>
            <input type="text" name="title" onChange={onFormFieldChange  } />
            <label>Content</label>
            <input type="textarea" name="content"  onChange={onFormFieldChange}/>
            {formData?.content}
            <button onClick={onSubmit} type="submit" className="btn btn-secondary">Submit</button>
        </form>
    )
}
export default Home
